import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'net.nemerosa.versioning' version '2.6.1'
}

group 'com.github.antoinejt'

def lastUpdate = 'November 25th 2019'

def majorVersionNumber = '0'
def minorVersionNumber = '7'
def patchVersionNumber = '0'
def wipBuildNumber = '4' // if different from 0 it indicates that this is a wip version, not a yet released one

def buildNumber = (wipBuildNumber != '0') ? "-alpha.${wipBuildNumber}" : ''
def versionNumber = "${majorVersionNumber}.${minorVersionNumber}.${patchVersionNumber}${buildNumber}"
def internalVersionNumber = "${versionNumber}${versioning.info.branch != 'master' ? '-DEVELOP' : ''}"

version "${versionNumber}-${versioning.info.full}"

def jarName = "${jar.archiveBaseName.getOrNull()}-${rootProject.version}.jar"
def runScript = "java -jar ${jarName}"

sourceCompatibility = 1.8

jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.antoinejt.jasc.Main',
                'Built-By': System.properties['user.name'],
                'Last-Update': lastUpdate,
                'Version': internalVersionNumber,
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Revision': versioning.info.commit,
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }

    doLast {
        new File('build/libs', 'run.bat').text = runScript
        new File('build/libs', 'run.sh').text = runScript
    }
}

task run(dependsOn: ':build', type: Exec) {
    commandLine 'java', '-jar', "build/libs/${jarName}"
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}
